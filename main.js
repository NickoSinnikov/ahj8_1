(()=>{"use strict";class t{constructor(t,e,s,i){let n;this.ticketsWrapper=document.querySelector(".tickets"),this.id=t,this.name=e,this.status=s,this.created=i;const a=document.createElement("div");a.className="ticket",a.dataset.id=this.id;const o=document.createElement("div");o.className="ticket-content";const c=document.createElement("div");c.className="ticket-name",c.textContent=this.name,o.append(c),n=this.status?'<input type="checkbox" class="ticket-checkbox" checked>':'<input type="checkbox" class="ticket-checkbox">';const d=`<div class="ticket-created">${this.created}</div>`,l=document.createElement("div");return l.className="ticket-control",l.innerHTML='\n\t  <button type="button" class="edit-btn">&#9998</button>\n\t  <button type="button" class="delete-btn">X</button>\n\t  ',a.insertAdjacentHTML("beforeend",n),a.append(o),a.insertAdjacentHTML("beforeend",d),a.append(l),a}}class e{allTickets(){return new Promise(((t,e)=>{const s=new XMLHttpRequest;s.open("GET","https://ahj-http1-bk.herokuapp.com/?method=allTickets"),s.addEventListener("load",(()=>{if(s.status>=200&&s.status<300)try{const e=JSON.parse(s.responseText);t(e)}catch(t){console.error(t),e(t)}})),s.send()}))}ticketById(t){return new Promise(((e,s)=>{const i=new XMLHttpRequest;(new URLSearchParams).append("id",t),i.open("GET",`https://ahj-http1-bk.herokuapp.com/?method=ticketById&id=${t}`),i.addEventListener("load",(()=>{if(i.status>=200&&i.status<300)try{const t=JSON.parse(i.responseText);e(t)}catch(t){console.error(t),s(t)}})),i.send()}))}createTicket(t,e){return new Promise(((s,i)=>{const n=new URLSearchParams;n.append("name",t),n.append("description",e);const a=new XMLHttpRequest;a.open("POST","https://ahj-http1-bk.herokuapp.com/?method=createTicket"),a.addEventListener("load",(()=>{if(a.status>=200&&a.status<300)try{const t=JSON.parse(a.responseText);s(t)}catch(t){console.error(t),i(t)}})),a.send(n)}))}removeById(t){return new Promise(((e,s)=>{const i=new XMLHttpRequest;(new URLSearchParams).append("id",t),i.open("DELETE",`https://ahj-http1-bk.herokuapp.com/?method=removeById&id=${t}`),i.addEventListener("load",(()=>{if(i.status>=200&&i.status<300)try{const t=JSON.parse(i.responseText);e(t)}catch(t){console.error(t),s(t)}})),i.send()}))}editTicket(t,e,s){return new Promise(((i,n)=>{const a=new XMLHttpRequest,o=new URLSearchParams;o.append("id",t),o.append("name",e),o.append("description",s),console.log(o),a.open("POST",`https://ahj-http1-bk.herokuapp.com/?method=editTicket&id=${t}`),a.addEventListener("load",(()=>{if(a.status>=200&&a.status<300)try{const t=JSON.parse(a.responseText);i(t)}catch(t){console.error(t),n(t)}})),a.send(o)}))}}class s{constructor(t){this.parentEl=t,this.modal=document.createElement("div")}bindToDOM(){this.modal.className="modal",this.modal.classList.add("hidden"),this.modal.innerHTML='\n\t  <form class="modal-form">\n\t\t<h2 class="modal-title">Добавить тикет</h2>\n\t\t<label>\n\t\t  <span class="input-title">Краткое описание</span>\n\t\t  <input class="input-name" type="text" required>\n\t\t</label>\n\t\t<label>\n\t\t  <span class="input-title">Подробное описание</span>\n\t\t  <textarea class="input-description" type="text" required></textarea>\n\t\t</label>\n\t\t<div class="btn-box">\n\t\t  <button class="cancel-btn" type="button">Отмена</button>\n\t\t  <button class="ok-btn" type="submit">Ок</button>\n\t\t</div>\n\t  </form>\n\t  ',this.parentEl.appendChild(this.modal),this.activeModal=document.querySelector(".modal"),this.form=this.modal.querySelector(".modal-form"),this.name=this.modal.querySelector(".input-name"),this.description=this.modal.querySelector(".input-description"),this.cancelBtn=this.modal.querySelector(".cancel-btn"),this.okBtn=this.modal.querySelector(".ok-btn")}openModal(t){this.activeModal.classList.remove("hidden"),this.activeModal.style.top=(window.innerHeight-this.activeModal.offsetHeight)/2+"px",this.activeModal.style.left=(window.innerWidth-this.activeModal.offsetWidth)/2+"px",this.cancelBtn.addEventListener("click",this.closeModal),this.form.addEventListener("submit",t)}closeModal(t){t.preventDefault(),this.activeModal.classList.add("hidden")}}class i{init(){this.modal=document.createElement("div"),this.modal.className="delete-modal",this.modal.classList.add("hidden"),this.modal.innerHTML='\n\t  <h2 class="modal-title">Удалить тикет</h2>\n\t  <div class="modal-text">Вы уверены, что хотите удалить тикет? Это действие необратимо.</div>\n\t  <div class="btn-box">\n\t\t  <button class="del-cancel-btn" type="button">Отмена</button>\n\t\t  <button class="del-ok-btn" type="submit">Ок</button>\n\t\t</div>\n\t  ',document.body.appendChild(this.modal),this.deleteModal=document.querySelector(".delete-modal"),this.cancelDelBtn=this.modal.querySelector(".del-cancel-btn"),this.okDelBtn=this.modal.querySelector(".del-ok-btn")}openDeleteModal(t){this.deleteModal.classList.remove("hidden"),this.deleteModal.style.top=(window.innerHeight-this.deleteModal.offsetHeight)/2+"px",this.deleteModal.style.left=(window.innerWidth-this.deleteModal.offsetWidth)/2+"px",this.okDelBtn.addEventListener("click",t)}closeDeleteModal(){this.deleteModal.classList.add("hidden")}}(new class{constructor(){this.ticketsWrapper=document.querySelector(".tickets"),this.modal=new s(document.body),this.deleteModal=new i,this.id=null,this.ticketIndex=null,this.addBtn=document.querySelector(".add-btn"),this.request=new e,this.addTicket=this.addTicket.bind(this),this.editTicket=this.editTicket.bind(this),this.ticketActions=this.ticketActions.bind(this),this.tickets=[]}init(){this.modal.bindToDOM(),this.modalTitle=document.querySelector(".modal-title"),this.deleteModal.init(),this.cancelBtn=document.querySelector(".cancel-btn"),this.delCancelBtn=document.querySelector(".del-cancel-btn"),this.okBtn=document.querySelector(".ok-btn"),this.addBtn.addEventListener("click",(t=>{t.preventDefault(),this.modal.openModal(this.addTicket)})),this.renderAllTickets(),this.cancelBtn.addEventListener("click",(t=>{t.preventDefault(),this.modal.closeModal(t)})),this.delCancelBtn.addEventListener("click",(t=>{this.deleteModal.closeDeleteModal(t)}))}renderAllTickets(){this.request.allTickets().then((e=>{this.tickets=[],this.ticketsWrapper.innerHTML="",e.forEach((e=>{const s=new t(e.id,e.name,e.status,e.created);this.tickets.push(s)}));for(const t of this.tickets)this.ticketsWrapper.appendChild(t)})),this.ticketsWrapper.addEventListener("click",this.ticketActions)}addTicket(){this.request.createTicket(this.modal.name.value,this.modal.description.value).then((()=>{this.renderAllTickets()}))}deleteTicket(t){this.deleteModal.closeDeleteModal(),this.request.removeById(t).then((()=>{this.renderAllTickets()}))}editTicket(t){const e=this.request.editTicket(t,this.modal.name.value,this.modal.description.value);console.log(t,this.modal.name.value,this.modal.description.value),e.then((()=>{this.renderAllTickets()}))}getDescription(t,e){e.description||this.request.ticketById(t).then((t=>{const s=document.createElement("div");s.className="ticket-description",s.innerText=t.description,e.querySelector(".ticket-content").append(s)}))}ticketActions(t){const e=t.target.closest(".ticket");console.log(e);const s=this.tickets.find((t=>t.id===e.id));if(this.id=e.dataset.id,console.log(e.dataset.id),t.target.classList.contains("delete-btn")&&this.deleteModal.openDeleteModal((()=>this.deleteTicket(this.id))),t.target.classList.contains("edit-btn")&&(this.modalTitle.innerText="Изменить тикет",this.modal.openModal((()=>this.editTicket(this.id)))),t.target.classList.contains("ticket-name")||t.target.classList.contains("ticket-description")){s.style.cursor="pointer";const t=e.querySelector(".ticket-description");t||this.getDescription(this.id,e),t.classList.toggle("hidden")}t.target.classList.contains("ticket-checkbox")&&(s.status=t.target.checked,console.log(s.status))}}).init()})();